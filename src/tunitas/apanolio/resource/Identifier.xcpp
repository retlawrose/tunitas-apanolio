// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019, Oath Inc.; Copyright 2020, Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-apanolio/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/apanolio/tree/LICENSE
#divert <fpp>
#import std.uint64_t
#import nonstd.uint128_t
#import std.underlying_type
#import rabinpoly.Fingerprint
namespace tunitas::apanolio::resource {
  //
  // Identifiers are expected to be <strike>64-bit</strike>128-bit bundles of bits.
  // These bits can be generated randomly or they can be generated by hasning or from a "fingerprinting" technique.
  //
  // The identifiers are expected to be globally unique across time and space.
  //
  // Usage:
  //
  //   #import tunitas.apanolio.resource.identifier.construct
  //   auto iden = identifier::construct(...somehow...);
  //
  //   #import tunitas.apanolio.resource.to_string
  //   cout << to_string(iden);
  //
  enum Identifier : nonstd::uint128_t;
  namespace identifier {
    using Underlying = std::underlying_type<Identifier>::type;
    enum Generate { };
    // [[FIXTHIS]] move to 128-bit bundles with folly::Fingerprint<128>, c.f. https://github.com/facebook/folly/blob/master/folly/Fingerprint.h
    using Fingerprint = rabinpoly::Fingerprint;
  }
}
#endiv
