// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019-2019, Oath Inc.
// Licensed under the terms of the Apache-2.0 license. See the LICENSE file in https://github.com/yahoo/tunitas-apanolio/blob/master/LICENSE for terms.
#divert <fpp>
#import std.size_t
#import std.tuple
#import apache.httpd.status.Code
namespace tunitas::apanolio::resting::file::detail {
  //
  // Code is the HTTP status code to return the client
  // size_t is the bytes actually written to (our) storage
  //        this may be different than the bytes read off the wire.
  //
  using Gulped = std::tuple<Lookup, apache::httpd::status::Code, std::size_t>;
}
#endiv
#divert <hpp>
namespace tunitas::apanolio::resting::file::detail {
  inline auto make(apache::httpd::status::Code, std::size_t = 0) -> Gulped;

  inline auto ok(Gulped const &) -> bool;
  inline auto status(Gulped const &) -> apache::httpd::status::Code;
  inline auto size(Gulped const &) -> std::size_t;
}
#endiv
#divert <ipp>
#import std.get
namespace tunitas::apanolio::resting::file {
  auto detail::make(apache::httpd::status::Code c, std::size_t s) -> Gulped {
    return Gulped(Lookup(), c, s);
  }
  auto detail::ok(Gulped const &g) -> bool {
    return ok(status(g));
  }
  auto detail::status(Gulped const &g) -> apache::httpd::status::Code {
    return std::get<1>(g);
  }
  auto detail::size(Gulped const &g) -> std::size_t {
    return std::get<2>(g);
  }
}
#endiv

