// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019-2019, Oath Inc.
// Licensed under the terms of the Apache-2.0 license. See LICENSE file in https://github.com/yahoo/tunitas-apanolio/blob/master/LICENSE for terms.
#divert <fpp>
namespace tunitas::apanolio::storage::engine::state {
  //
  // The prototype of a storage engine state.
  // Descendants only.
  //
  // Usage: see a storage engine; e.g. Engine<MYSQL>, Engine<PGSQL>, Engine<RAMCLOUD>, Engine<FABRIC>, Engine<SCARPET>
  //
  class Prototype;
}
#endiv
#divert <hpp>
class tunitas::apanolio::storage::engine::state::Prototype {
protected:
  ~Prototype() = default;
public:
  Prototype() = default;
  // Perhaps the descendants can have move semantics, but that's unlikely to be helpful.
  Prototype(Prototype const &) = delete;
  auto operator=(Prototype const &) -> Prototype & = delete;
};
#endiv
