// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-apanolio/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/apanolio/tree/LICENSE
#divert <hpp>
#import tests.unit.resting.file.Pair
namespace tests {
  namespace unit {
    namespace resting {
      namespace file {
        //
        // TYPE is 'string' to generate unqiue filenames
        // TYPE is 'int' to return file descriptors on unique filenames
        //
        template<typename TYPE> inline auto generate() -> Pair<TYPE>; 
      }
    }
  }
}
#entail tests.unit.resting.file.generate.descriptors
#entail tests.unit.resting.file.generate.filenames
#endiv
#divert <ipp>
template<typename TYPE> auto tests::unit::resting::file::generate() -> Pair<TYPE> {
  static_assert(0 == sizeof (TYPE) && 0 != sizeof (TYPE), "specializations only");
  return Pair<TYPE>();
}
#endiv
