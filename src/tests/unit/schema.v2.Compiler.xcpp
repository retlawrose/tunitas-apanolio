// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-apanolio/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/apanolio/tree/LICENSE
#divert <fpp>
namespace tests::unit::schema::v2 { class Compiler; }
#endiv
#divert <hpp>
#import tunitas.apanolio.schema.v2.Compiler
struct tests::unit::schema::v2::Compiler : public rigging::suite::Fixture {
  using Subject = ::tunitas::apanolio::schema::v2::Compiler;
  auto test_constructor() -> void;
  static auto suite() -> Suite;
};
#endiv
#divert <cpp>
#import std.cerr
auto tests::unit::schema::v2::Compiler::test_constructor() -> void {
  Subject subject0;
  Subject subject1{std::cerr};
  CPPUNIT_ASSERT(&subject0 != &subject1);
}
auto tests::unit::schema::v2::Compiler::suite() -> Suite {
  auto series = Stream{"Compiler"sv};
  series << add("constructor", &Compiler::test_constructor)
         << END;
  return settle(series);
}
#endiv
