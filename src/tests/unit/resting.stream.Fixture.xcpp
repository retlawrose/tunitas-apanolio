// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019, Oath Inc.; Copyright 2020, Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-apanolio/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/apanolio/tree/LICENSE
#divert <fpp>
namespace tests::unit::resting::stream { class Fixture; }
#endiv
#divert <hpp>
class tests::unit::resting::stream::Fixture : public cppunit::test::Fixture {
public:
  auto test_something_anything() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
auto tests::unit::resting::stream::Fixture::test_something_anything() -> void {
  CPPUNIT_ASSERT(true);
}
#import tests.unit.resting.stream.Stream
#import tests.unit.resting.stream.Iterator
auto tests::unit::resting::stream::Fixture::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  namespace suite = ::rigging::suite;
  suite::Stream series("stream");
  series << call("something-anything", &Fixture::test_something_anything)
         << add<Stream>()
         << add<Iterator>()
    ;
  return finalize(series);
}
#endiv
