// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-apanolio/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/apanolio/tree/LICENSE
#divert <fpp>
namespace tests::unit::engine { class Fixture; }
#endiv
#divert <hpp>
class tests::unit::engine::Fixture : public cppunit::test::Fixture {
public:
  auto test_something() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
auto tests::unit::engine::Fixture::test_something() -> void {
  CPPUNIT_ASSERT(true);
}
#import tunitas.apanolio.storage.Engine
#import tests.unit.engine.Engine
auto tests::unit::engine::Fixture::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series("engine");
  namespace testing = tests::unit::engine;
  namespace subject = ::tunitas::apanolio::storage::engine;
  series << call("something", &Fixture::test_something)
         << add<testing::Engine<subject::NONE>>()
         << add<testing::Engine<subject::MEMORY>>()
         << add<testing::Engine<subject::FILES>>()
         << add<testing::Engine<subject::SQLITE>>()
         << add<testing::Engine<subject::LEVELDB>>()
         << add<testing::Engine<subject::MYSQL>>()
         << add<testing::Engine<subject::PGSQL>>()
         << add<testing::Engine<subject::RAMCLOUD>>()
         << add<testing::Engine<subject::FABRIC>>()
         << add<testing::Engine<subject::SCARPET>>()
    ;
  return finalize(series);
}
#endiv
