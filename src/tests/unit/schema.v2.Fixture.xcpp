// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-apanolio/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/apanolio/tree/LICENSE
#divert <fpp>
namespace tests::unit::schema::v2 { class Fixture; }
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
class tests::unit::schema::v2::Fixture : public cppunit::test::Fixture {
public:
  auto test_usage_Compiler() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import tunitas.apanolio.schema.v2.Compiler
#import std.cerr
auto tests::unit::schema::v2::Fixture::test_usage_Compiler() -> void {
  using Subject = ::tunitas::apanolio::schema::v2::Compiler;
  Subject subject0;
  Subject subject1{std::cerr};
  CPPUNIT_ASSERT(&subject0 != &subject1);
}
#import tests.unit.schema.v2.Compiler
#import rigging.suite.io
auto tests::unit::schema::v2::Fixture::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series("v2");   
  series << []() {
              Stream use("usage");
              use << call("Compiler", &Fixture::test_usage_Compiler)
                ;
              return move(use);
            }()
         << add<Compiler>()
    ;
  return finalize(series);
}
#endiv
