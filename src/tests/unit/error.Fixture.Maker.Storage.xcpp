// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-apanolio/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/apanolio/tree/LICENSE
#divert <fpp>
#import tests.unit.exception.Fixture.Maker
#endiv
#divert <hpp>
#import tunitas.apanolio.error.Code
template<> struct tests::unit::exception::Fixture::Maker<tunitas::apanolio::exception::Storage> {
  usine Exception = tunitas::apanolio::exception::Storage;
  explicit Maker(std::string const &reason);
  auto operator()() const ->  Exception;
protected:
  std::string reason;
  static constexpr auto CODE = ::tunitas::apanolio::error::Code::FAILURE;
};
#endiv
#divert <cpp>
namespace tests::unit::exception {
  Fixture::Maker<tunitas::apanolio::exception::Storage>::Maker(std::string const &reason)
  : reason{reason}
  { }
  auto Fixture::Maker<tunitas::apanolio::exception::Storage>::Maker::operator()() const ->  Exception {
    return Exception{CODE, reason};
  }
}
#endiv
