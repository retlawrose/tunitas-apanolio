// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019, Oath Inc.; Copyright 2020, Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-apanolio/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/apanolio/tree/LICENSE
#divert <hpp>
#import tests.unit.resting.file.Guard
#import tests.unit.resting.file.Pair
namespace tests {
  namespace unit {
    namespace resting {
      namespace file {
        //
        // Upon destruction, close both file descriptors mentioned in the subject
        //
        template<> inline Guard<Pair<int>>::~Guard();
      }
    }
  }
}
#endiv
#divert <ipp>
#import sys.posix.close
template<> tests::unit::resting::file::Guard<tests::unit::resting::file::Pair<int>>::~Guard() {
  // Try our best ... don't even report the failures
  using ::sys::posix::native::close; // [[FIXTHIS]] use the newfangled close(id::File)
  close(subject.first);
  close(subject.second);
}
#endiv
