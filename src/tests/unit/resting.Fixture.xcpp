// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-apanolio/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/apanolio/tree/LICENSE
#divert <fpp>
namespace tests::unit::resting { class Fixture; }
#endiv
#divert <hpp>
struct tests::unit::resting::Fixture : public rigging::suite::Fixture {
  auto test_something_anything() -> void;
  static auto suite() -> Suite;
};
#endiv
#divert <cpp>
auto tests::unit::resting::Fixture::test_something_anything() -> void {
  // There is nothing, nothing at all, to test here.
  CPPUNIT_ASSERT(true);
}
#import tests.unit.resting.buffer.Fixture
#import tests.unit.resting.file.Fixture
#import tests.unit.resting.stream.Fixture
#import tests.unit.resting.Validate
auto tests::unit::resting::Fixture::suite() -> Suite {
  namespace suite = ::rigging::suite;
  auto series = Stream{"resting"sv};
  // Whereas there is no functionality in the tunitas::apanolio::resting namespace
  series << add("something-anything", &Fixture::test_something_anything)
         << add<buffer::Fixture>()
         << add<file::Fixture>()
         << add<stream::Fixture>()
         << add<Validate>()
         << END;
  return settle(series);
}
#endiv
