// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-apanolio/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/apanolio/tree/LICENSE
#divert <fpp>
namespace mod::apanolio::method {
  //
  // PUT /{ID} HTTP/X.Y
  // <body is ignored>
  //
  // Expectations of URL routing consistency are enforced
  //
  //   case 1
  //       /{ID}         uri
  //       /             location_prefix.value  i.e. "" followed by "/"
  //   case 2
  //       /prefix/{ID}  uri
  //       /prefix/      location_prefix.value  i.e. "" followed by "/"
  //
  // Usage:
  //   Putter putter{r, spec};
  //   return putter();
  //
  class Putter;
}
#endiv
#divert <hpp>
#import apache.httpd.status.Code
#import mod.apanolio.method.Emplacer
class mod::apanolio::method::Putter : public Emplacer {
  using Ancestor = Emplacer;
public:
  using Ancestor::Emplacer;
  auto operator()() -> apache::httpd::status::Code;
};
#endiv
#divert <cpp>
auto mod::apanolio::method::Putter::operator()() -> apache::httpd::status::Code {
  auto parsed = uri_parser(this->req->uri);
  if (!ok(parsed)) {
    return HTTP::BAD_REQUEST;
  }
  if (prefix(parsed) != spec->location_prefix.value) {
    // How then, did this get routed here?
    return HTTP::NOT_FOUND;
  }
  return emplace("PUT", identifier(parsed));
}
#endiv
