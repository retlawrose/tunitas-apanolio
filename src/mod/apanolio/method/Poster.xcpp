// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-apanolio/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/apanolio/tree/LICENSE
#divert <fpp>
namespace mod::apanolio::method {
  //
  // POST / HTTP/X.Y
  // <body is accepted>
  //
  // Expectations of URL routing consistency are enforced
  // (this is trivial and obvious for POST but not for PUT, DELETE, etc.}
  // when the path name is the same as the configured location prefix value
  //     /     uri
  //     /     location_prefix.value
  //
  // The only thing you can do is POST into '/' (or whatever the location prefix is)
  //
  // Exceptions
  //   Only if the Poster can't POST or respond with an error page.
  //
  // Usage:
  //
  //   Poster poster{r, spec};
  //   return poster();
  //
  class Poster;
}
#endiv
#divert <hpp>
#import apache.httpd.status.Code
#import mod.apanolio.method.Emplacer
class mod::apanolio::method::Poster : public Emplacer {
  using Ancestor = Emplacer;
public:
  using Ancestor::Emplacer;
  auto operator()() -> apache::httpd::status::Code;
};
#endiv
#divert <cpp>
#import std.string
auto mod::apanolio::method::Poster::operator()() -> apache::httpd::status::Code {
  if (std::string{this->req->uri} != spec->location_prefix.value) {
    // How then, did this get routed here?
    return HTTP::NOT_FOUND;
  }
  return emplace("POST");
}
#endiv
